// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoTechFull.Database;

namespace MoTechFull.API.Migrations
{
    [DbContext(typeof(MoTechContext))]
    partial class MoTechContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoTechFull.Database.Artikal", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<bool>("Dostupan")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("ArtikalId");

                    b.HasIndex(new[] { "KategorijaId" }, "IX_Artikal_KategorijaId");

                    b.HasIndex(new[] { "ProizvodjacId" }, "IX_Artikal_ProizvodjacId");

                    b.ToTable("Artikal");
                });

            modelBuilder.Entity("MoTechFull.Database.ArtikalPonudum", b =>
                {
                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<int>("PonudaId")
                        .HasColumnType("int");

                    b.HasKey("ArtikalId", "PonudaId");

                    b.HasIndex(new[] { "PonudaId" }, "IX_ArtikalPonuda_PonudaId");

                    b.ToTable("ArtikalPonuda");
                });

            modelBuilder.Entity("MoTechFull.Database.ArtikalServi", b =>
                {
                    b.Property<int>("ArtikalServisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPrijema")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<int>("NarudzbaStavkeId")
                        .HasColumnType("int");

                    b.Property<string>("ServiserNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtikalServisId");

                    b.HasIndex(new[] { "NarudzbaStavkeId" }, "IX_ArtikalServis_NarudzbaStavkeId");

                    b.ToTable("ArtikalServis");
                });

            modelBuilder.Entity("MoTechFull.Database.AutorizacijskiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "KorisnickiNalogId" }, "IX_AutorizacijskiToken_KorisnickiNalogId");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("MoTechFull.Database.Dobavljac", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DobavljacId");

                    b.HasIndex(new[] { "GradId" }, "IX_Dobavljac_GradId");

                    b.ToTable("Dobavljac");
                });

            modelBuilder.Entity("MoTechFull.Database.DobavljacNarudzba", b =>
                {
                    b.Property<int>("DobavljacNarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIsporuke")
                        .HasColumnType("datetime2");

                    b.Property<int>("DobavljacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsIsporucena")
                        .HasColumnType("bit");

                    b.HasKey("DobavljacNarudzbaId");

                    b.HasIndex(new[] { "DobavljacId" }, "IX_DobavljacNarudzba_DobavljacId");

                    b.ToTable("DobavljacNarudzba");
                });

            modelBuilder.Entity("MoTechFull.Database.DobavljacNarudzbaStavke", b =>
                {
                    b.Property<int>("DobavljacNarudzbaStavkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("DobavljacNarudzbaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.HasKey("DobavljacNarudzbaStavkeId");

                    b.HasIndex(new[] { "ArtikalId" }, "IX_DobavljacNarudzbaStavke_ArtikalId");

                    b.HasIndex(new[] { "DobavljacNarudzbaId" }, "IX_DobavljacNarudzbaStavke_DobavljacNarudzbaId");

                    b.ToTable("DobavljacNarudzbaStavke");
                });

            modelBuilder.Entity("MoTechFull.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KantonId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.HasIndex(new[] { "KantonId" }, "IX_Grad_KantonId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("MoTechFull.Database.Kanton", b =>
                {
                    b.Property<int>("KantonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oznaka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KantonId");

                    b.ToTable("Kanton");
                });

            modelBuilder.Entity("MoTechFull.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("MoTechFull.Database.KorisnickiNalog", b =>
                {
                    b.Property<int>("KorisnickiNalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("KorisnickiNalogId");

                    b.ToTable("KorisnickiNalog");
                });

            modelBuilder.Entity("MoTechFull.Database.Korpa", b =>
                {
                    b.Property<int>("KorpaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorpaId");

                    b.HasIndex(new[] { "KupacId" }, "IX_Korpa_KupacId");

                    b.ToTable("Korpa");
                });

            modelBuilder.Entity("MoTechFull.Database.KorpaArtikli", b =>
                {
                    b.Property<int>("KorpaArtikliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KorpaId")
                        .HasColumnType("int");

                    b.HasKey("KorpaArtikliId");

                    b.HasIndex(new[] { "ArtikalId" }, "IX_KorpaArtikli_ArtikalId");

                    b.HasIndex(new[] { "KorpaId" }, "IX_KorpaArtikli_KorpaId");

                    b.ToTable("KorpaArtikli");
                });

            modelBuilder.Entity("MoTechFull.Database.Kupac", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacId");

                    b.HasIndex(new[] { "GradId" }, "IX_Kupac_GradId");

                    b.HasIndex(new[] { "KorisnickiNalogId" }, "IX_Kupac_KorisnickiNalogId");

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("MoTechFull.Database.KupacNarudzbe", b =>
                {
                    b.Property<int>("KupacNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaDostave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<bool>("IsIsporucena")
                        .HasColumnType("bit");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.HasKey("KupacNarudzbeId");

                    b.HasIndex(new[] { "GradId" }, "IX_KupacNarudzbe_GradId");

                    b.HasIndex(new[] { "KupacId" }, "IX_KupacNarudzbe_KupacId");

                    b.ToTable("KupacNarudzbe");
                });

            modelBuilder.Entity("MoTechFull.Database.NarudzbaStavke", b =>
                {
                    b.Property<int>("NarudzbaStavkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KupacNarudzbeId")
                        .HasColumnType("int");

                    b.Property<float>("Popust")
                        .HasColumnType("real");

                    b.Property<int>("RacunId")
                        .HasColumnType("int");

                    b.Property<double>("UnitCijena")
                        .HasColumnType("float");

                    b.HasKey("NarudzbaStavkeId");

                    b.HasIndex(new[] { "ArtikalId" }, "IX_NarudzbaStavke_ArtikalId");

                    b.HasIndex(new[] { "KupacNarudzbeId" }, "IX_NarudzbaStavke_KupacNarudzbeId");

                    b.HasIndex(new[] { "RacunId" }, "IX_NarudzbaStavke_RacunId");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("MoTechFull.Database.Novosti", b =>
                {
                    b.Property<int>("NovostiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("NovostiId");

                    b.HasIndex(new[] { "UposlenikId" }, "IX_Novosti_UposlenikId");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("MoTechFull.Database.Ponudum", b =>
                {
                    b.Property<int>("PonudaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PonudaId");

                    b.ToTable("Ponuda");
                });

            modelBuilder.Entity("MoTechFull.Database.Proizvodjac", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjac");
                });

            modelBuilder.Entity("MoTechFull.Database.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime2");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("RacunId");

                    b.HasIndex(new[] { "UposlenikId" }, "IX_Racun_UposlenikId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("MoTechFull.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecenzijaId");

                    b.HasIndex(new[] { "ArtikalId" }, "IX_Recenzija_ArtikalId");

                    b.HasIndex(new[] { "KupacId" }, "IX_Recenzija_KupacId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("MoTechFull.Database.Uposlenik", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAktivan")
                        .HasColumnType("bit")
                        .HasColumnName("isAktivan");

                    b.Property<double>("IznosPlate")
                        .HasColumnType("float");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JMBG");

                    b.Property<int?>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UposlenikId");

                    b.HasIndex(new[] { "GradId" }, "IX_Uposlenik_GradId");

                    b.HasIndex(new[] { "KorisnickiNalogId" }, "IX_Uposlenik_KorisnickiNalogId");

                    b.ToTable("Uposlenik");
                });

            modelBuilder.Entity("MoTechFull.Database.Artikal", b =>
                {
                    b.HasOne("MoTechFull.Database.Kategorija", "Kategorija")
                        .WithMany("Artikals")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Proizvodjac", "Proizvodjac")
                        .WithMany("Artikals")
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("MoTechFull.Database.ArtikalPonudum", b =>
                {
                    b.HasOne("MoTechFull.Database.Artikal", "Artikal")
                        .WithMany("ArtikalPonuda")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Ponudum", "Ponuda")
                        .WithMany("ArtikalPonuda")
                        .HasForeignKey("PonudaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Ponuda");
                });

            modelBuilder.Entity("MoTechFull.Database.ArtikalServi", b =>
                {
                    b.HasOne("MoTechFull.Database.NarudzbaStavke", "NarudzbaStavke")
                        .WithMany("ArtikalServis")
                        .HasForeignKey("NarudzbaStavkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NarudzbaStavke");
                });

            modelBuilder.Entity("MoTechFull.Database.AutorizacijskiToken", b =>
                {
                    b.HasOne("MoTechFull.Database.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany("AutorizacijskiTokens")
                        .HasForeignKey("KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("MoTechFull.Database.Dobavljac", b =>
                {
                    b.HasOne("MoTechFull.Database.Grad", "Grad")
                        .WithMany("Dobavljacs")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("MoTechFull.Database.DobavljacNarudzba", b =>
                {
                    b.HasOne("MoTechFull.Database.Dobavljac", "Dobavljac")
                        .WithMany("DobavljacNarudzbas")
                        .HasForeignKey("DobavljacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dobavljac");
                });

            modelBuilder.Entity("MoTechFull.Database.DobavljacNarudzbaStavke", b =>
                {
                    b.HasOne("MoTechFull.Database.Artikal", "Artikal")
                        .WithMany("DobavljacNarudzbaStavkes")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.DobavljacNarudzba", "DobavljacNarudzba")
                        .WithMany("DobavljacNarudzbaStavkes")
                        .HasForeignKey("DobavljacNarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("DobavljacNarudzba");
                });

            modelBuilder.Entity("MoTechFull.Database.Grad", b =>
                {
                    b.HasOne("MoTechFull.Database.Kanton", "Kanton")
                        .WithMany("Grads")
                        .HasForeignKey("KantonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kanton");
                });

            modelBuilder.Entity("MoTechFull.Database.Korpa", b =>
                {
                    b.HasOne("MoTechFull.Database.Kupac", "Kupac")
                        .WithMany("Korpas")
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("MoTechFull.Database.KorpaArtikli", b =>
                {
                    b.HasOne("MoTechFull.Database.Artikal", "Artikal")
                        .WithMany("KorpaArtiklis")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Korpa", "Korpa")
                        .WithMany("KorpaArtiklis")
                        .HasForeignKey("KorpaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Korpa");
                });

            modelBuilder.Entity("MoTechFull.Database.Kupac", b =>
                {
                    b.HasOne("MoTechFull.Database.Grad", "Grad")
                        .WithMany("Kupacs")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany("Kupacs")
                        .HasForeignKey("KorisnickiNalogId");

                    b.Navigation("Grad");

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("MoTechFull.Database.KupacNarudzbe", b =>
                {
                    b.HasOne("MoTechFull.Database.Grad", "Grad")
                        .WithMany("KupacNarudzbes")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Kupac", "Kupac")
                        .WithMany("KupacNarudzbes")
                        .HasForeignKey("KupacId")
                        .IsRequired();

                    b.Navigation("Grad");

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("MoTechFull.Database.NarudzbaStavke", b =>
                {
                    b.HasOne("MoTechFull.Database.Artikal", "Artikal")
                        .WithMany("NarudzbaStavkes")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.KupacNarudzbe", "KupacNarudzbe")
                        .WithMany("NarudzbaStavkes")
                        .HasForeignKey("KupacNarudzbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Racun", "Racun")
                        .WithMany("NarudzbaStavkes")
                        .HasForeignKey("RacunId")
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("KupacNarudzbe");

                    b.Navigation("Racun");
                });

            modelBuilder.Entity("MoTechFull.Database.Novosti", b =>
                {
                    b.HasOne("MoTechFull.Database.Uposlenik", "Uposlenik")
                        .WithMany("Novostis")
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("MoTechFull.Database.Racun", b =>
                {
                    b.HasOne("MoTechFull.Database.Uposlenik", "Uposlenik")
                        .WithMany("Racuns")
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("MoTechFull.Database.Recenzija", b =>
                {
                    b.HasOne("MoTechFull.Database.Artikal", "Artikal")
                        .WithMany("Recenzijas")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoTechFull.Database.Kupac", "Kupac")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("MoTechFull.Database.Uposlenik", b =>
                {
                    b.HasOne("MoTechFull.Database.Grad", "Grad")
                        .WithMany("Uposleniks")
                        .HasForeignKey("GradId");

                    b.HasOne("MoTechFull.Database.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany("Uposleniks")
                        .HasForeignKey("KorisnickiNalogId");

                    b.Navigation("Grad");

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("MoTechFull.Database.Artikal", b =>
                {
                    b.Navigation("ArtikalPonuda");

                    b.Navigation("DobavljacNarudzbaStavkes");

                    b.Navigation("KorpaArtiklis");

                    b.Navigation("NarudzbaStavkes");

                    b.Navigation("Recenzijas");
                });

            modelBuilder.Entity("MoTechFull.Database.Dobavljac", b =>
                {
                    b.Navigation("DobavljacNarudzbas");
                });

            modelBuilder.Entity("MoTechFull.Database.DobavljacNarudzba", b =>
                {
                    b.Navigation("DobavljacNarudzbaStavkes");
                });

            modelBuilder.Entity("MoTechFull.Database.Grad", b =>
                {
                    b.Navigation("Dobavljacs");

                    b.Navigation("KupacNarudzbes");

                    b.Navigation("Kupacs");

                    b.Navigation("Uposleniks");
                });

            modelBuilder.Entity("MoTechFull.Database.Kanton", b =>
                {
                    b.Navigation("Grads");
                });

            modelBuilder.Entity("MoTechFull.Database.Kategorija", b =>
                {
                    b.Navigation("Artikals");
                });

            modelBuilder.Entity("MoTechFull.Database.KorisnickiNalog", b =>
                {
                    b.Navigation("AutorizacijskiTokens");

                    b.Navigation("Kupacs");

                    b.Navigation("Uposleniks");
                });

            modelBuilder.Entity("MoTechFull.Database.Korpa", b =>
                {
                    b.Navigation("KorpaArtiklis");
                });

            modelBuilder.Entity("MoTechFull.Database.Kupac", b =>
                {
                    b.Navigation("Korpas");

                    b.Navigation("KupacNarudzbes");

                    b.Navigation("Recenzijas");
                });

            modelBuilder.Entity("MoTechFull.Database.KupacNarudzbe", b =>
                {
                    b.Navigation("NarudzbaStavkes");
                });

            modelBuilder.Entity("MoTechFull.Database.NarudzbaStavke", b =>
                {
                    b.Navigation("ArtikalServis");
                });

            modelBuilder.Entity("MoTechFull.Database.Ponudum", b =>
                {
                    b.Navigation("ArtikalPonuda");
                });

            modelBuilder.Entity("MoTechFull.Database.Proizvodjac", b =>
                {
                    b.Navigation("Artikals");
                });

            modelBuilder.Entity("MoTechFull.Database.Racun", b =>
                {
                    b.Navigation("NarudzbaStavkes");
                });

            modelBuilder.Entity("MoTechFull.Database.Uposlenik", b =>
                {
                    b.Navigation("Novostis");

                    b.Navigation("Racuns");
                });
#pragma warning restore 612, 618
        }
    }
}
